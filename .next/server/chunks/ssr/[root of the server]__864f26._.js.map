{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/38598/Downloads/s/IFDb-main/src/components/Izbornik.tsx"],"sourcesContent":["/*\n  Izbornik prikazuje grid s checkboxovima za žanrove (prvih 10 najčešćih), pretragu i favorite.\n  ZAŠTO: Grid s checkboxovima je pregledniji za filtriranje, a žanrovi su hardkodirani radi brzine i UX-a.\n*/\n'use client';\n\nimport Link from 'next/link';\nimport { useState } from 'react';\nimport { useRouter, usePathname } from 'next/navigation';\n\nconst GENRES = [\n  'Drama', 'Comedy', 'Action', 'Thriller', 'Crime',\n  'Science-Fiction', 'Adventure', 'Family', 'Romance', 'Horror',\n];\n\nexport default function Izbornik() {\n  const [showGenres, setShowGenres] = useState(false);\n  const [selectedGenres, setSelectedGenres] = useState<string[]>([]);\n  const [search, setSearch] = useState('');\n  const router = useRouter();\n  const pathname = usePathname();\n\n  // Funkcija za pretragu serija\n  const handleSearch = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (search.trim()) {\n      router.push(`/search?q=${encodeURIComponent(search)}`);\n    }\n  };\n\n  // Funkcija za filtriranje po žanrovima\n  const handleGenreChange = (genre: string) => {\n    let updated;\n    if (selectedGenres.includes(genre)) {\n      updated = selectedGenres.filter((g) => g !== genre);\n    } else {\n      updated = [...selectedGenres, genre];\n    }\n    setSelectedGenres(updated);\n    // Navigacija na početnu s query parametrom za filtriranje\n    router.push(`/?genres=${encodeURIComponent(updated.join(','))}`);\n  };\n\n  // Prikaz izbornika ovisno o stranici\n  const isHome = pathname === '/';\n  const showBackToShow = !isHome;\n\n  return (\n    <nav className=\"bg-black text-white mb-6 px-4 py-3 rounded flex flex-wrap gap-4 items-center relative\">\n      <Link href=\"/\" className=\"text-white text-xl mr-4\">\n        IFDb\n      </Link>\n      <form onSubmit={handleSearch} className=\"flex gap-2 items-center\">\n        <input\n          type=\"text\"\n          placeholder=\"Pretraga serija...\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          className=\"border border-white bg-black text-white px-2 py-1 rounded focus:outline-none focus:ring focus:border-blue-400 placeholder-white\"\n        />\n        <button\n          type=\"submit\"\n          className=\"bg-white text-black px-3 py-1 rounded hover:bg-gray-200 transition font-semibold border border-white\"\n        >\n          Pretraži\n        </button>\n      </form>\n      {/* Prikaz filtera samo na početnoj stranici */}\n      {isHome && (\n        <div className=\"relative\">\n          <button\n            onClick={() => setShowGenres((g) => !g)}\n            className=\"bg-white text-black px-2 py-1 rounded font-semibold ml-2 border border-white hover:bg-gray-200\"\n          >\n            Filtriraj žanrove\n          </button>\n          {showGenres && (\n            <div className=\"absolute left-0 mt-2 z-10 bg-black border border-white rounded p-4 shadow-lg grid grid-cols-2 gap-2 w-64\">\n              {GENRES.map((genre) => (\n                <label key={genre} className=\"flex items-center gap-1 text-white\">\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedGenres.includes(genre)}\n                    onChange={() => handleGenreChange(genre)}\n                    className=\"accent-white bg-black border-white\"\n                  />\n                  <span>{genre}</span>\n                </label>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n      <Link\n        href=\"/favorites\"\n        className=\"ml-auto bg-white text-black px-4 py-2 rounded font-bold hover:bg-gray-200 transition border border-white\"\n      >\n        &#11088; Favoriti\n      </Link>\n      {/* Prikaz tipke za nazad ako nismo na početnoj */}\n      {showBackToShow && (\n        <button\n          onClick={() => router.back()}\n          className=\"ml-4 text-white underline border-none bg-transparent hover:text-gray-300\"\n        >\n          &#8592; Povratak\n        </button>\n      )}\n    </nav>\n  );\n}\n"],"names":[],"mappings":"AAAA;;;AAGA;;;;AAGA;AACA;AACA;AAJA;;;;;AAMA,MAAM,SAAS;IACb;IAAS;IAAU;IAAU;IAAY;IACzC;IAAmB;IAAa;IAAU;IAAW;CACtD;AAEc,SAAS;IACtB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACjE,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAE3B,8BAA8B;IAC9B,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,IAAI,OAAO,IAAI,IAAI;YACjB,OAAO,IAAI,CAAC,CAAC,UAAU,EAAE,mBAAmB,SAAS;QACvD;IACF;IAEA,uCAAuC;IACvC,MAAM,oBAAoB,CAAC;QACzB,IAAI;QACJ,IAAI,eAAe,QAAQ,CAAC,QAAQ;YAClC,UAAU,eAAe,MAAM,CAAC,CAAC,IAAM,MAAM;QAC/C,OAAO;YACL,UAAU;mBAAI;gBAAgB;aAAM;QACtC;QACA,kBAAkB;QAClB,0DAA0D;QAC1D,OAAO,IAAI,CAAC,CAAC,SAAS,EAAE,mBAAmB,QAAQ,IAAI,CAAC,OAAO;IACjE;IAEA,qCAAqC;IACrC,MAAM,SAAS,aAAa;IAC5B,MAAM,iBAAiB,CAAC;IAExB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,4JAAA,CAAA,UAAI;gBAAC,MAAK;gBAAI,WAAU;0BAA0B;;;;;;0BAGnD,8OAAC;gBAAK,UAAU;gBAAc,WAAU;;kCACtC,8OAAC;wBACC,MAAK;wBACL,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;wBACzC,WAAU;;;;;;kCAEZ,8OAAC;wBACC,MAAK;wBACL,WAAU;kCACX;;;;;;;;;;;;YAKF,wBACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,SAAS,IAAM,cAAc,CAAC,IAAM,CAAC;wBACrC,WAAU;kCACX;;;;;;oBAGA,4BACC,8OAAC;wBAAI,WAAU;kCACZ,OAAO,GAAG,CAAC,CAAC,sBACX,8OAAC;gCAAkB,WAAU;;kDAC3B,8OAAC;wCACC,MAAK;wCACL,SAAS,eAAe,QAAQ,CAAC;wCACjC,UAAU,IAAM,kBAAkB;wCAClC,WAAU;;;;;;kDAEZ,8OAAC;kDAAM;;;;;;;+BAPG;;;;;;;;;;;;;;;;0BActB,8OAAC,4JAAA,CAAA,UAAI;gBACH,MAAK;gBACL,WAAU;0BACX;;;;;;YAIA,gCACC,8OAAC;gBACC,SAAS,IAAM,OAAO,IAAI;gBAC1B,WAAU;0BACX;;;;;;;;;;;;AAMT"}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/38598/Downloads/s/IFDb-main/src/components/AuthProvider.tsx"],"sourcesContent":["/*\n  NextAuth frontend provider i login/logout gumbi.\n  ZAŠTO: Omogućuje korisniku prijavu/odjavu i vezanje favorita uz korisnički račun.\n*/\n'use client';\n\nimport { SessionProvider, signIn, signOut, useSession } from 'next-auth/react';\nimport { usePathname } from 'next/navigation';\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  return <SessionProvider>{children}</SessionProvider>;\n}\n\nexport function AuthButtons() {\n  const { data: session, status } = useSession();\n  const pathname = usePathname(); // koristi Next.js hook za ispravno detektiranje rute\n  if (status === 'loading') return null;\n  if (session) {\n    return (\n      <div className=\"flex gap-2 items-center\">\n        <span className=\"text-green-700 font-semibold\">Prijavljeni ste kao {session.user?.name || session.user?.email}</span>\n        <button onClick={() => signOut()} className=\"bg-red-500 text-white px-3 py-1 rounded\">Odjava</button>\n      </div>\n    );\n  }\n  // Prikazuj gumb za prijavu samo ako nismo na /signin stranici\n  if (pathname === '/signin') {\n    return null;\n  }\n  return (\n    <button onClick={() => signIn()} className=\"bg-blue-600 text-white px-3 py-1 rounded\" tabIndex={0}>Prijava s računom</button>\n  );\n}\n"],"names":[],"mappings":"AAAA;;;AAGA;;;;;AAGA;AACA;AAHA;;;;AAKO,SAAS,aAAa,EAAE,QAAQ,EAAiC;IACtE,qBAAO,8OAAC,8IAAA,CAAA,kBAAe;kBAAE;;;;;;AAC3B;AAEO,SAAS;IACd,MAAM,EAAE,MAAM,OAAO,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,8IAAA,CAAA,aAAU,AAAD;IAC3C,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD,KAAK,qDAAqD;IACrF,IAAI,WAAW,WAAW,OAAO;IACjC,IAAI,SAAS;QACX,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAK,WAAU;;wBAA+B;wBAAqB,QAAQ,IAAI,EAAE,QAAQ,QAAQ,IAAI,EAAE;;;;;;;8BACxG,8OAAC;oBAAO,SAAS,IAAM,CAAA,GAAA,8IAAA,CAAA,UAAO,AAAD;oBAAK,WAAU;8BAA0C;;;;;;;;;;;;IAG5F;IACA,8DAA8D;IAC9D,IAAI,aAAa,WAAW;QAC1B,OAAO;IACT;IACA,qBACE,8OAAC;QAAO,SAAS,IAAM,CAAA,GAAA,8IAAA,CAAA,SAAM,AAAD;QAAK,WAAU;QAA2C,UAAU;kBAAG;;;;;;AAEvG"}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}