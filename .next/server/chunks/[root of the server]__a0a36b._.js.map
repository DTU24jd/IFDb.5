{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/38598/Downloads/s/IFDb-main/src/app/api/favorites/route.ts"],"sourcesContent":["import { cookies } from 'next/headers';\nimport { NextResponse } from 'next/server';\n\n// Funkcija za dohvat favorita iz cookieja\nasync function getFavoritesFromCookie() {\n  const cookieStore = await cookies();\n  const raw = cookieStore.get('favorites');\n  try {\n    return raw ? JSON.parse(raw.value) : [];\n  } catch {\n    return [];\n  }\n}\n\n// Funkcija za spremanje favorita u cookie\nasync function setFavoritesToCookie(favorites: number[]) {\n  const cookieStore = await cookies();\n  cookieStore.set('favorites', JSON.stringify(favorites), {\n    path: '/',\n    httpOnly: false,\n    sameSite: 'lax',\n    maxAge: 60 * 60 * 24 * 30,\n  });\n}\n\nexport async function GET() {\n  const favorites = await getFavoritesFromCookie();\n  return NextResponse.json(favorites);\n}\n\nexport async function POST(request: Request) {\n  const { id } = await request.json();\n  const favorites = await getFavoritesFromCookie();\n  if (!favorites.includes(id)) {\n    favorites.push(id);\n    await setFavoritesToCookie(favorites);\n  }\n  return NextResponse.json({ status: 'added', favorites });\n}\n\nexport async function DELETE(request: Request) {\n  const { id } = await request.json();\n  const favorites = await getFavoritesFromCookie();\n  const newFavorites = favorites.filter((favId: number) => favId !== id);\n  await setFavoritesToCookie(newFavorites);\n  return NextResponse.json({ status: 'removed', favorites });\n}"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAEA,0CAA0C;AAC1C,eAAe;IACb,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAChC,MAAM,MAAM,YAAY,GAAG,CAAC;IAC5B,IAAI;QACF,OAAO,MAAM,KAAK,KAAK,CAAC,IAAI,KAAK,IAAI,EAAE;IACzC,EAAE,OAAM;QACN,OAAO,EAAE;IACX;AACF;AAEA,0CAA0C;AAC1C,eAAe,qBAAqB,SAAmB;IACrD,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAChC,YAAY,GAAG,CAAC,aAAa,KAAK,SAAS,CAAC,YAAY;QACtD,MAAM;QACN,UAAU;QACV,UAAU;QACV,QAAQ,KAAK,KAAK,KAAK;IACzB;AACF;AAEO,eAAe;IACpB,MAAM,YAAY,MAAM;IACxB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC3B;AAEO,eAAe,KAAK,OAAgB;IACzC,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,QAAQ,IAAI;IACjC,MAAM,YAAY,MAAM;IACxB,IAAI,CAAC,UAAU,QAAQ,CAAC,KAAK;QAC3B,UAAU,IAAI,CAAC;QACf,MAAM,qBAAqB;IAC7B;IACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,QAAQ;QAAS;IAAU;AACxD;AAEO,eAAe,OAAO,OAAgB;IAC3C,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,QAAQ,IAAI;IACjC,MAAM,YAAY,MAAM;IACxB,MAAM,eAAe,UAAU,MAAM,CAAC,CAAC,QAAkB,UAAU;IACnE,MAAM,qBAAqB;IAC3B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,QAAQ;QAAW;IAAU;AAC1D"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}